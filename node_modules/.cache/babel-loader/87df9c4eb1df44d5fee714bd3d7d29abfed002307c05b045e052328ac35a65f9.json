{"ast":null,"code":"var _jsxFileName = \"/home/brianmock/Code/spectrum-deco/src/components/Score.js\";\nimport cmykRgb from 'cmyk-rgb';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Score(_ref) {\n  let {\n    myColor,\n    todaysColor\n  } = _ref;\n  const [myR, myG, myB] = cmykRgb([myColor.cyan / 100, myColor.magenta / 100, myColor.yellow / 100, myColor.black / 100]);\n  const [r, g, b] = cmykRgb([todaysColor.cyan / 100, todaysColor.magenta / 100, todaysColor.yellow / 100, todaysColor.black / 100]);\n  const diff = Math.abs(myR - r) + Math.abs(myG - g) + Math.abs(myB - b);\n  const score = Math.round((1 - diff / 765) * 100);\n  const skewedScore = Math.round(Math.abs(Math.round(Math.log((101 - score) / 100) * 100)) / 461 * 100);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        textAlign: 'center',\n        width: '100vw',\n        top: '50%',\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Skewed Score: \", skewedScore]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: `rgb(${myR}, ${myG}, ${myB})`,\n        height: '100vh',\n        width: '50vw'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: `rgb(${r}, ${g}, ${b})`,\n        height: '100vh',\n        width: '50vw'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_c = Score;\nvar _c;\n$RefreshReg$(_c, \"Score\");","map":{"version":3,"names":["cmykRgb","Score","myColor","todaysColor","myR","myG","myB","cyan","magenta","yellow","black","r","g","b","diff","Math","abs","score","round","skewedScore","log","display","position","textAlign","width","top","flexDirection","backgroundColor","height"],"sources":["/home/brianmock/Code/spectrum-deco/src/components/Score.js"],"sourcesContent":["import cmykRgb from 'cmyk-rgb';\n\nexport default function Score({ myColor, todaysColor\n}) {\n\n  const [myR, myG, myB] = cmykRgb([myColor.cyan / 100, myColor.magenta / 100, myColor.yellow / 100, myColor.black / 100]);\n\n  const [r, g, b] = cmykRgb([todaysColor.cyan / 100, todaysColor.magenta / 100, todaysColor.yellow / 100, todaysColor.black / 100]);\n\n  const diff = Math.abs(myR - r) + Math.abs(myG - g) + Math.abs(myB - b);\n\n  const score = Math.round((1 - (diff / 765)) * 100);\n  const skewedScore = Math.round((Math.abs(Math.round(Math.log((101 - score) / 100) * 100)) / 461) * 100);\n\n  return (\n    <div\n      style={{ display: 'flex' }}\n    >\n      <div style={{ position: 'absolute', textAlign: 'center', width: '100vw', top: '50%', display: 'flex', flexDirection: 'column' }}>\n        <div>Score: {score}</div>\n        <div>Skewed Score: {skewedScore}</div>\n      </div>\n      <div\n        style={{\n          backgroundColor: `rgb(${myR}, ${myG}, ${myB})`,\n          height: '100vh',\n          width: '50vw',\n        }} />\n      <div\n        style={{\n          backgroundColor: `rgb(${r}, ${g}, ${b})`,\n          height: '100vh',\n          width: '50vw',\n        }} />\n    </div>\n  );\n}\n"],"mappings":";AAAA,OAAOA,OAAO,MAAM,UAAU;AAAC;AAE/B,eAAe,SAASC,KAAK,OAC1B;EAAA,IAD2B;IAAEC,OAAO;IAAEC;EACzC,CAAC;EAEC,MAAM,CAACC,GAAG,EAAEC,GAAG,EAAEC,GAAG,CAAC,GAAGN,OAAO,CAAC,CAACE,OAAO,CAACK,IAAI,GAAG,GAAG,EAAEL,OAAO,CAACM,OAAO,GAAG,GAAG,EAAEN,OAAO,CAACO,MAAM,GAAG,GAAG,EAAEP,OAAO,CAACQ,KAAK,GAAG,GAAG,CAAC,CAAC;EAEvH,MAAM,CAACC,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC,GAAGb,OAAO,CAAC,CAACG,WAAW,CAACI,IAAI,GAAG,GAAG,EAAEJ,WAAW,CAACK,OAAO,GAAG,GAAG,EAAEL,WAAW,CAACM,MAAM,GAAG,GAAG,EAAEN,WAAW,CAACO,KAAK,GAAG,GAAG,CAAC,CAAC;EAEjI,MAAMI,IAAI,GAAGC,IAAI,CAACC,GAAG,CAACZ,GAAG,GAAGO,CAAC,CAAC,GAAGI,IAAI,CAACC,GAAG,CAACX,GAAG,GAAGO,CAAC,CAAC,GAAGG,IAAI,CAACC,GAAG,CAACV,GAAG,GAAGO,CAAC,CAAC;EAEtE,MAAMI,KAAK,GAAGF,IAAI,CAACG,KAAK,CAAC,CAAC,CAAC,GAAIJ,IAAI,GAAG,GAAI,IAAI,GAAG,CAAC;EAClD,MAAMK,WAAW,GAAGJ,IAAI,CAACG,KAAK,CAAEH,IAAI,CAACC,GAAG,CAACD,IAAI,CAACG,KAAK,CAACH,IAAI,CAACK,GAAG,CAAC,CAAC,GAAG,GAAGH,KAAK,IAAI,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,GAAI,GAAG,CAAC;EAEvG,oBACE;IACE,KAAK,EAAE;MAAEI,OAAO,EAAE;IAAO,CAAE;IAAA,wBAE3B;MAAK,KAAK,EAAE;QAAEC,QAAQ,EAAE,UAAU;QAAEC,SAAS,EAAE,QAAQ;QAAEC,KAAK,EAAE,OAAO;QAAEC,GAAG,EAAE,KAAK;QAAEJ,OAAO,EAAE,MAAM;QAAEK,aAAa,EAAE;MAAS,CAAE;MAAA,wBAC9H;QAAA,WAAK,SAAO,EAACT,KAAK;MAAA;QAAA;QAAA;QAAA;MAAA,QAAO,eACzB;QAAA,WAAK,gBAAc,EAACE,WAAW;MAAA;QAAA;QAAA;QAAA;MAAA,QAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QAClC,eACN;MACE,KAAK,EAAE;QACLQ,eAAe,EAAG,OAAMvB,GAAI,KAAIC,GAAI,KAAIC,GAAI,GAAE;QAC9CsB,MAAM,EAAE,OAAO;QACfJ,KAAK,EAAE;MACT;IAAE;MAAA;MAAA;MAAA;IAAA,QAAG,eACP;MACE,KAAK,EAAE;QACLG,eAAe,EAAG,OAAMhB,CAAE,KAAIC,CAAE,KAAIC,CAAE,GAAE;QACxCe,MAAM,EAAE,OAAO;QACfJ,KAAK,EAAE;MACT;IAAE;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACH;AAEV;AAAC,KAlCuBvB,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}